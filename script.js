document.addEventListener("DOMContentLoaded", function () {
  const scenes = document.querySelectorAll(".scene");
  const backgroundMusic = document.getElementById("background-music");

  if (backgroundMusic) {
    backgroundMusic.play();
  }

  let playerHealth = 100;
  let dragonHealth = 150;

  function animateHit(targetId) {
    const el = document.getElementById(targetId);
    if (el) {
      el.classList.add("flash-hit", "shake");
      setTimeout(() => {
        el.classList.remove("flash-hit", "shake");
      }, 500);
    }
  }

  function updateHealthBars() {
    const playerHealthEl = document.getElementById("player-health");
    const dragonHealthEl = document.getElementById("dragon-health");
    if (playerHealthEl) playerHealthEl.textContent = Math.max(playerHealth, 0);
    if (dragonHealthEl) dragonHealthEl.textContent = Math.max(dragonHealth, 0);
  }

  window.goToScene = function (sceneId) {
    scenes.forEach(scene => scene.classList.remove("active"));
    const target = document.getElementById(sceneId);

    if (sceneId === "scene7") {
      if (localStorage.getItem("hasSword") !== "true") {
        alert("–¢–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —á–∞—Ä—ñ–≤–Ω–∏–π –º–µ—á, —â–æ–± –∑—ñ—Ç–∫–Ω—É—Ç–∏—Å—å –∑ –í—É–ª–∫–∞–Ω—ñ—á–Ω–∏–º –¥—Ä–∞–∫–æ–Ω–æ–º!");
        return;
      }
      playerHealth = 100;
      dragonHealth = 150;
      updateHealthBars();
      const battleResult = document.getElementById("battle-result");
      if (battleResult) battleResult.innerHTML = "";
    }

    if (target) {
      target.classList.add("active");
      localStorage.setItem("currentScene", sceneId);
      updateInventory();
    }
  };

  function updateInventory() {
    const inventoryList = document.getElementById("inventory-list");
    if (!inventoryList) return;
    inventoryList.innerHTML = "";
    if (localStorage.getItem("hasFruit") === "true") {
      const li = document.createElement("li");
      li.textContent = "üå≠ –ú–∞–≥—ñ—á–Ω–∏–π —Ñ—Ä—É–∫—Ç";
      inventoryList.appendChild(li);
    }
    if (localStorage.getItem("hasAmulet") === "true") {
      const li = document.createElement("li");
      li.textContent = "üî∑ –ê–º—É–ª–µ—Ç –î—Ä–µ–≤–Ω—ñ—Ö –í–æ–¥";
      inventoryList.appendChild(li);
    }
    if (localStorage.getItem("hasSword") === "true") {
      const li = document.createElement("li");
      li.textContent = "üåà –ú–µ—á –ë–∞–ª–∞–Ω—Å—É";
      inventoryList.appendChild(li);
    }
    if (inventoryList.children.length === 0) {
      const li = document.createElement("li");
      li.textContent = "–ü–æ—Ä–æ–∂–Ω—å–æ...";
      inventoryList.appendChild(li);
    }
  }

  function initProgress() {
    const currentScene = localStorage.getItem("currentScene");
    if (!currentScene) {
      goToScene("scene1");
    } else {
      goToScene(currentScene);
    }

    const restartBtn = document.getElementById("restart-btn");
    if (restartBtn) {
      restartBtn.addEventListener("click", function () {
        localStorage.clear();
        location.reload();
      });
    }

    const forestGoblinsLinks = document.querySelectorAll("a.forestgoblins");
    forestGoblinsLinks.forEach(link => {
      link.addEventListener("click", function (event) {
        event.preventDefault();
        goToScene("scene4");
      });
    });

    const seadragonLinks = document.querySelectorAll("a.seadragon");
    seadragonLinks.forEach(link => {
      link.addEventListener("click", function (event) {
        event.preventDefault();
        if (localStorage.getItem("hasFruit") === "true") {
          goToScene("scene5");
        } else {
          alert("–¢–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Ñ—Ä—É–∫—Ç, —â–æ–± –∑—É—Å—Ç—Ä—ñ—Ç–∏—Å—è –∑—ñ –∑–º—ñ—î–º!");
        }
      });
    });

    const rainbowElfLinks = document.querySelectorAll("a.raindbowelf");
    rainbowElfLinks.forEach(link => {
      link.addEventListener("click", function (event) {
        event.preventDefault();
        if (localStorage.getItem("hasAmulet") === "true") {
          goToScene("scene6");
        } else {
          alert("–¢–∏ —â–µ –Ω–µ –æ—Ç—Ä–∏–º–∞–≤ –∞–º—É–ª–µ—Ç –î—Ä–µ–≤–Ω—ñ—Ö –í–æ–¥!");
        }
      });
    });

    const goblinBtn = document.getElementById("goblin-btn");
    if (goblinBtn) {
      if (localStorage.getItem("goblinQuestCompleted") === "true") {
        goblinBtn.setAttribute("onclick", "lockedScene(event)");
      } else {
        goblinBtn.setAttribute("onclick", "goToScene('scene4')");
      }
    }

    const seadragonBtn = document.getElementById("seadragon-btn");
    if (seadragonBtn) {
      if (localStorage.getItem("seadragonUnlocked") === "true") {
        seadragonBtn.classList.remove("disabled");
        seadragonBtn.setAttribute("onclick", "goToScene('scene5')");
      } else {
        seadragonBtn.classList.add("disabled");
        seadragonBtn.setAttribute("onclick", "lockedScene(event)");
      }
    }

    const elfBtn = document.querySelector(".raindbowelf");
    if (elfBtn) {
      if (localStorage.getItem("seadragonQuestCompleted") === "true") {
        elfBtn.classList.remove("disabled");
        elfBtn.setAttribute("onclick", "goToScene('scene6')");
      } else {
        elfBtn.classList.add("disabled");
        elfBtn.setAttribute("onclick", "lockedScene(event)");
      }
    }

    const vulcanBtn = document.querySelector(".vulkandragon");
    if (vulcanBtn) {
      if (localStorage.getItem("hasSword") === "true") {
        vulcanBtn.style.display = "inline-block";
        vulcanBtn.classList.remove("disabled");
        vulcanBtn.setAttribute("onclick", "goToScene('scene7')");
      } else {
        vulcanBtn.style.display = "none";
        vulcanBtn.classList.add("disabled");
      }
    }

    const scene2Btn = document.querySelector(".Btn");
    if (scene2Btn) {
      scene2Btn.addEventListener("click", function () {
        goToScene("scene2");
      });
    }
  }

  function lockedScene(event) {
    event.preventDefault();
    alert("–¶—è –ª–æ–∫–∞—Ü—ñ—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∞. –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º–∞–π —á–∞—Ä—ñ–≤–Ω–∏–π –º–µ—á.");
  }

  function unlockSeadragon() {
    const btn = document.getElementById('seadragon-btn');
    if (btn) {
      btn.classList.remove('disabled');
      btn.setAttribute('onclick', "goToScene('scene5')");
      localStorage.setItem('seadragonUnlocked', 'true');
    }
  }

  window.choose = function (action) {
    const result = document.getElementById('result');
    const caveQuest = document.getElementById('cave-quest');
    const caveResult = document.getElementById('cave-result');

    if (result) result.innerHTML = '';
    if (caveResult) caveResult.innerHTML = '';
    if (caveQuest) caveQuest.style.display = 'none';

    if (action === 'talk') {
      if (result) result.innerHTML = "<p>–ì–æ–±–ª—ñ–Ω –≤–∏—è–≤–∏–≤—Å—è –¥—Ä—É–∂–Ω—ñ–º. –í—ñ–Ω –¥–∞—Ä—É—î —Ç–æ–±—ñ —á–∞—Ä—ñ–≤–Ω–∏–π –ª–∏—Å—Ç–æ–∫ üçÉ —ñ —Ä–æ–∑–ø–æ–≤—ñ–¥–∞—î –ø—Ä–æ –º–∞–≥—ñ—á–Ω—É –ø–µ—á–µ—Ä—É.</p>";
      if (caveQuest) caveQuest.style.display = 'block';
    } else if (action === 'sneak') {
      if (result) result.innerHTML = "<p>–¢–∏ –Ω–∞–º–∞–≥–∞—î—à—Å—è –ø—Ä–æ–π—Ç–∏ –ø–æ–≤–∑ –≥–æ–±–ª—ñ–Ω–∞... –ì—ñ–ª–∫–∞ —Ç—Ä—ñ—Å–∫–∞—î—Ç—å—Å—è!</p>";
    } else if (action === 'fight') {
      if (result) result.innerHTML = "<p>–¢–∏ –≤—Å—Ç—É–ø–∞—î—à —É –±—ñ–π! –ü—ñ—Å–ª—è —Å—É—Ç–∏—á–∫–∏ –≥–æ–±–ª—ñ–Ω —Ç—ñ–∫–∞—î, –∑–∞–ª–∏—à–∏–≤—à–∏ —Ñ—Ä—É–∫—Ç–∏.</p>";
      if (caveQuest) caveQuest.style.display = 'block';
    }

    localStorage.setItem('goblinQuestCompleted', 'true');
  };

  window.caveChoice = function (choice) {
    const caveResult = document.getElementById('cave-result');

    if (choice === 'eat') {
      if (caveResult) caveResult.innerHTML = "<p>–§—Ä—É–∫—Ç —Å–º–∞—á–Ω–∏–π, –∞–ª–µ —Ç–∏ –≤—Ç—Ä–∞—á–∞—î—à –∑–¥–æ—Ä–æ–≤'—è üíÄ</p>";
      setTimeout(() => location.reload(), 3000);
    } else if (choice === 'keep') {
      if (caveResult) caveResult.innerHTML = "<p>–¢–∏ –æ–±–µ—Ä–µ–∂–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—î—à —Ñ—Ä—É–∫—Ç–∏ üçõ‚ú®</p>";
      localStorage.setItem('hasFruit', 'true');
      setTimeout(() => {
        goToScene('scene2');
        const goblinBtn = document.getElementById('goblin-btn');
        if (goblinBtn) goblinBtn.style.display = 'none';
        unlockSeadragon();
      }, 4000);
    }
  };

  window.seadragonChoice = function (action) {
    const resultDiv = document.getElementById('seadragon-result');
    resultDiv.innerHTML = '';

    if (action === 'give') {
      if (localStorage.getItem('hasFruit') === 'true') {
        resultDiv.innerHTML = "<p>–ó–º—ñ–π –±–µ—Ä–µ–∂–Ω–æ –±–µ—Ä–µ —Ñ—Ä—É–∫—Ç —ñ –∑–∞–ª–∏—à–∞—î —Ç–æ–±—ñ –∞–º—É–ª–µ—Ç.</p>";
        localStorage.setItem('hasAmulet', 'true');
        localStorage.removeItem('hasFruit');

        const elfBtn = document.querySelector('.raindbowelf');
        if (elfBtn) elfBtn.classList.remove('disabled');

        setTimeout(() => {
          goToScene('scene2');
          const seadragonBtn = document.getElementById('seadragon-btn');
          if (seadragonBtn) seadragonBtn.style.display = 'none';
        }, 4000);

      } else {
        resultDiv.innerHTML = "<p>–£ —Ç–µ–±–µ –Ω–µ–º–∞—î —Ñ—Ä—É–∫—Ç–∞! –ó–º—ñ–π –ª—é—Ç–æ –≥–∞—Ä—á–∏—Ç—å!</p>";
      }
    } else if (action === 'refuse') {
      resultDiv.innerHTML = "<p>–ú–æ—Ä—Å—å–∫–∏–π –∑–º—ñ–π —Å—É–º–Ω–æ –∑–∞–Ω—É—Ä—é—î—Ç—å—Å—è —É –≤–æ–¥—É...</p>";
    }
  };

  window.buySword = function () {
    const result = document.getElementById('elf-result');
    if (localStorage.getItem('hasAmulet') === 'true' && localStorage.getItem('hasSword') !== 'true') {
      result.innerHTML = "<p>–ï–ª—å—Ñ –≤—Ä—É—á–∞—î —Ç–æ–±—ñ —á–∞—Ä—ñ–≤–Ω–∏–π –º–µ—á üåàüó°.</p>";
      localStorage.removeItem('hasAmulet');
      localStorage.setItem('hasSword', 'true');

      const vulcanLink = document.querySelector('.vulkandragon');
      if (vulcanLink) {
        vulcanLink.style.display = 'inline-block';
        vulcanLink.classList.remove('disabled');
        vulcanLink.setAttribute('onclick', 'goToScene("scene7")');
      }

      const allLinks = document.querySelectorAll('a');
      allLinks.forEach(link => {
        if (!link.classList.contains('vulkandragon')) {
          link.style.display = 'none';
        }
      });

      setTimeout(() => goToScene('scene2'), 5000);
    } else {
      result.innerHTML = "<p>–ï–ª—å—Ñ –∑–∞—è–≤–ª—è—î, —â–æ —Ç–∏ —â–µ –Ω–µ –≥—ñ–¥–Ω–∏–π –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–µ—á.</p>";
    }
  };

  window.attackDragon = function () {
    const dragonStatus = document.getElementById("dragonStatus");
    const playerStatus = document.getElementById("playerStatus");
    const battleResult = document.getElementById("battle-result");

    if (dragonHealth > 0 && playerHealth > 0) {
      dragonHealth -= 20;
      playerHealth -= 10;
      updateHealthBars();
      animateHit("dragonStatus");

      if (dragonHealth <= 0) {
        battleResult.innerHTML = "<p>–¢–∏ –ø–µ—Ä–µ–º—ñ–≥ –¥—Ä–∞–∫–æ–Ω–∞!</p>";
        setTimeout(() => goToScene('scene8'), 5000);
      } else if (playerHealth <= 0) {
        battleResult.innerHTML = "<p>–¢–∏ –∑–∞–≥–∏–Ω—É–≤ —É –±–æ—é üíÄ</p>";
        setTimeout(() => location.reload(), 3000);
      }
    }
  };

  window.showAmuletInfo = function () {
    const result = document.getElementById('elf-result');
    result.innerHTML = "<p>–ê–º—É–ª–µ—Ç –î—Ä–µ–≤–Ω—ñ—Ö –í–æ–¥ ‚Äî –∫–ª—é—á –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∞—Ä—ñ–≤–Ω–æ–≥–æ –º–µ—á–∞.</p>";
    if (localStorage.getItem('hasAmulet') === 'true' && localStorage.getItem('hasSword') !== 'true') {
      const exchangeBtn = document.getElementById('exchange-amulet-btn');
      if (exchangeBtn) exchangeBtn.style.display = 'inline-block';
    }
  };

  window.showElfInfo = function () {
    const result = document.getElementById('elf-result');
    result.innerHTML = `
      <p><strong>–ï–ª—å—Ñ:</strong> –Ø ‚Äî –õ—ñ–∞—Ä—ñ–µ–ª—å, –æ—Å—Ç–∞–Ω–Ω—ñ–π –º–∞–≥ –¥—Ä–µ–≤–Ω—ñ—Ö –µ–ª—å—Ñ—ñ–≤. –ö–æ–ª–∏—Å—å –º–∏ –∂–∏–ª–∏ –≤ –≥–∞—Ä–º–æ–Ω—ñ—ó –∑ –ø—Ä–∏—Ä–æ–¥–æ—é.</p>
      <p>–Ø —Å—Ç–µ—Ä–µ–∂—É –º–µ—á, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —ñ–∑ –≤–µ—Å–µ–ª–∫–∏ üåà</p>`;
  };

  window.showWorldInfo = function () {
    const result = document.getElementById('elf-result');
    result.innerHTML = `
      <p><strong>–ï–ª—å—Ñ:</strong> –ï–ª–∞—Ä—ñ–æ–Ω—ñ—è ‚Äî —Ü–µ —Å–≤—ñ—Ç, –¥–µ –ø–∞–Ω—É–≤–∞–ª–∞ —Ä—ñ–≤–Ω–æ–≤–∞–≥–∞. –ó–∞—Ä–∞–∑ –≤—ñ–Ω —É –Ω–µ–±–µ–∑–ø–µ—Ü—ñ.</p>
      <p>–¢–≤–æ—è –ø–æ–¥–æ—Ä–æ–∂ –¥–æ–ø–æ–º–æ–∂–µ –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –±–∞–ª–∞–Ω—Å —Å–∏–ª.</p>`;
  };

  initProgress();
});
